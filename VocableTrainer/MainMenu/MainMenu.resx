<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC2RXhpZgAATU0AKgAAAAgAAwE7AAIAAAAJAAAAModpAAQAAAAB
        AAAAPJydAAEAAAASAAAAnAAAAABBRlNBWlVCSQAAAASQAwACAAAAFAAAAHKQBAACAAAAFAAAAIaSkQAC
        AAAAAzYwAACSkgACAAAAAzYwAAAAAAAAMjAyMDowMzoyMCAyMjowMzoxMQAyMDIwOjAzOjIwIDIyOjAz
        OjExAAAAQQBGAFMAQQBaAFUAQgBJAAAA/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJCQoVDxAMERgVGhkY
        FRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsUKhwYHCoqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgAJwBaAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+kaKK4XT/itpd98RpPBr6df21+s0sSySouxyils8NnDK
        pIOOcj1q4wlNNxWxLko7ndVlweJ9Bu9WbS7XW9On1BHZGtI7uNpVZc7gUBzkYORjjBrnfEfxQ0vw5430
        7wvNZ3d1e35iCtBsKIZHKKDlgQeMnjoRXgVp4otvBvx41vXLyCW4ittT1D91FjczM8igZPQZIyfTPB6V
        1UcJKpFt9rrzMqlZRa9T6zoryfwV8e9K8Ua3b6TqGlzaVc3cnl27+essTMRwCxCkEnAAAOSRzVnxN8ar
        bS/E0vh/w1oF54i1G3dkmS3bChlHzBdquzEcg/KMY61m8LWUuRx1K9tC3Nc9PrOv/EOjaVdw2uqatY2V
        zcY8mG4uUjeTnA2qxBPPHFcj4H+LFh4v1abRL3TrjRdahUs1ncnO7H3gCQDuHUqVBxyM4OPHviT8KvG1
        38Qr69trObWIdSuXkt54nyI1LHbG+4jZtGACflwBg9QCNC0+So7CnVtHmgrn0ppmsabrVqbnR9QtdQtw
        xQy2s6yqGHJGVJGeRx71LLe2sEgjmuIo3IyFdwCfwrl/AXgSHwX4SstMt55En3faL8xuHW4maLY4yy5C
        A4I27T8i5PLA895RhzGwZWUkMG6g55r5jPM2eWcns483Nfy2t/mengsKsSnzO1j1AHNFZHhhpm0RPPyQ
        GIjJP8P/AOvNa9etha/1ihCta3Mk7HNUh7Obh2Cvnf412zeEfi1ofi+0jytwY5pFVyGlkgZQwPoDGY19
        +a+iK5L4jeAofiF4dh02W9NjJBcLPHOsQkwQpUqRkcEN6jkD0r0cLUVOpeW2zOatBzhZbnk3w4kPxC+P
        +p+KzC6WlmrTRAoMfdEMKtycMUy3HdDWZ4HiSX9qK+8xQ23VdRZcjoQZcGvY/hp8N7f4dadewpe/b7i8
        lV5LjyfK+RRhU27m6Euc/wC17Vl6D8IF0X4oXPjE60ZzPc3NwLT7Lt2mYtxv3nON/oM47V2PE07zSenL
        ZGCpTtG+97s8y8dQxw/tQad5aBfM1PTnbHdsxc/pWzrHgvUYfiNq2t/CfxZYTaqzTT3WnLcp5yFm+dMH
        KON5zh9oU7e4Brtdf+EQ1z4n2njAa2YDb3FtObT7Lu3eUVON+8Yzt9Dj3qn4m+CKal4qm8Q+F/EV34ev
        bh3kmMKFsu33irK6sueSeTknsOKccRTtFc3S2118w9lLXTqYfw98e6lJ8Tz4d8b+HbGHX5AYm1GK2SO4
        3LGW/esOGDIowVwPu8EHI9H01dP8DtHpd1rOqajLqV00scmozmd4ywVdobA2pkDA9WJ9a57wN8G4PCvi
        ZvEWr61ca3qo3mKWRCgRnGGZssxdiCRknGGPGcEdF8RdCm17wTqEGn28UuoCLNuzKCwG5S6qccFlUj8q
        87Hzvrh7dPT5fod+ApxnVjCu7Ju1+1+r9N2adj4q0DU7wWmn6zYXNw33YoblGZuMnAB54BPFcx458ZaN
        4bvreJ7OO9vpCHlURBtsfI5JI5JGB1xg5HTPguj6H4hfXAukabeG/sn80qsJDQsnzc5HByOh6nA6kCvT
        fDHw7vvFOm22o+Lra7sbkytb4iIgfyApYSMjq3O/KhcKcHdkjFc2Flh8Q7YmN0ulro9jiDKKmXQjLB1F
        K++qTXbTqmev6Xf2up6Xb3unuHtp4w0ZAxx6Y7EdMdqt1V03TrbSdNgsLGMR29ugRF9h3PqT1J9atVq7
        X93Y8KN7Lm3CiiikUFFFFABRRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
</root>